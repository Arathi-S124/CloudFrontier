service: cloud-frontier-collector-digitalocean

plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function
  - serverless-dotenv-plugin

package:
  exclude:
    - "**"
  include:
    - "!**"
    - "*.py"

custom:
  pythonRequirements:
    usePipenv: true

  serverless-iam-roles-per-function:
    defaultInherit: true

  dotenv:
    path: ../../credentials/digitalocean.env
    logging: false
    include:
      - DigitalOceanToken
      - DigitalOceanAWSAccessKeyID
      - DigitalOceanAWSAccessSecretKey

  # DynamoDB tables:
  DynamoDBTableAssets: Assets

  # SNS topics:
  SNSTopicAnalyzeIP: analyze-ip
  SNSTopicAnalyzeIPARN:
    Fn::Join:
      - ':'
      - - 'arn:aws:sns'
        - Ref: 'AWS::Region'
        - Ref: 'AWS::AccountId'
        - ${self:custom.SNSTopicAnalyzeIP}
  SNSTopicAnalyzeDomain: analyze-domain
  SNSTopicAnalyzeDomainARN:
    Fn::Join:
      - ':'
      - - 'arn:aws:sns'
        - Ref: 'AWS::Region'
        - Ref: 'AWS::AccountId'
        - ${self:custom.SNSTopicAnalyzeDomain}

  SNSTopicCollectDigitalOcean: collect-digitalocean
  SNSTopicCollectDigitalOceanARN:
    Fn::Join:
      - ':'
      - - 'arn:aws:sns'
        - Ref: 'AWS::Region'
        - Ref: 'AWS::AccountId'
        - ${self:custom.SNSTopicCollectDigitalOcean}

  SNSTopicCollectDigitalOceanSpaces: collect-digitalocean-spaces

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  profile: ${opt:profile, 'default'}
  region: ${opt:region, 'us-east-1'}

  runtime: python3.8
  memorySize: 128
  timeout: 60

  versionFunctions: false
  logRetentionInDays: 14

  environment:
    DigitalOceanToken: ${env:DigitalOceanToken}

    # DynamoDB tables:
    DynamoDBTableAssets: ${self:custom.DynamoDBTableAssets}

    # SNS topic:
    SNSTopicAnalyzeDomainARN: ${self:custom.SNSTopicAnalyzeDomainARN}
    SNSTopicAnalyzeIPARN: ${self:custom.SNSTopicAnalyzeIPARN}

  iamRoleStatements:
    # DynamoDB tables:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - Fn::Join:
            - ':'
            - - 'arn:aws:dynamodb'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - table/${self:custom.DynamoDBTableAssets}
    # SNS topics:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - ${self:custom.SNSTopicAnalyzeDomainARN}
        - ${self:custom.SNSTopicAnalyzeIPARN}

functions:
  SpacesFanOut:
    handler: spaces.handler_fan_out
    environment:
      SNSTopicCollectDigitalOceanSpacesARN: !Ref SNSTopicCollectDigitalOceanSpaces
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sns:Publish
        Resource:
          - !Ref SNSTopicCollectDigitalOceanSpaces
    iamRoleStatementsName: ${self:service.name}-${self:provider.stage}-SpacesFanOut
    events:
      - sns:
          arn: ${self:custom.SNSTopicCollectDigitalOceanARN}
          topicName: ${self:custom.SNSTopicCollectDigitalOcean}

  SpacesRegional:
    handler: spaces.handler_regional
    environment:
      DigitalOceanAWSAccessKeyID: ${env:DigitalOceanAWSAccessKeyID}
      DigitalOceanAWSAccessSecretKey: ${env:DigitalOceanAWSAccessSecretKey}
    events:
      - sns:
          arn: !Ref SNSTopicCollectDigitalOceanSpaces
          topicName: ${self:custom.SNSTopicCollectDigitalOceanSpaces}

  FloatingIPs:
    handler: floating_ips.handler
    events:
      - sns:
          arn: ${self:custom.SNSTopicCollectDigitalOceanARN}
          topicName: ${self:custom.SNSTopicCollectDigitalOcean}

  LoadBalancerIPs:
    handler: load_balancer_ips.handler
    events:
      - sns:
          arn: ${self:custom.SNSTopicCollectDigitalOceanARN}
          topicName: ${self:custom.SNSTopicCollectDigitalOcean}

  Domains:
    handler: domains.handler
    events:
      - sns:
          arn: ${self:custom.SNSTopicCollectDigitalOceanARN}
          topicName: ${self:custom.SNSTopicCollectDigitalOcean}

resources:
  Resources:
    # SNS topics:
    SNSTopicCollectDigitalOceanSpaces:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.SNSTopicCollectDigitalOceanSpaces}
